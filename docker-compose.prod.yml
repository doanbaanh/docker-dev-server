version: '3.2'

services:

    nginx:
        build: ./docker/nginx/
        container_name: nginx
        restart: always
        volumes:
            - ./src:/var/www
        ports:
            - 80:80
            - 443:443
        command: ["nginx", "-c", "nginx.conf", "-g", "daemon off;"]

    php:
        build: ./docker/php/
        container_name: php
        restart: always
        volumes:
            - ./src:/var/www

    worker:
        build: ./docker/php/
        container_name: worker
        restart: always
        volumes:
            - ./src:/var/www
            - ./docker/php/crontabs:/etc/crontabs
        entrypoint:
            - /usr/bin/supervisord
            - -n
            - -c
            - /etc/crontabs/supervisord.conf

    postgres:
        image: postgres:10-alpine
        container_name: postgres
        restart: always
        volumes:
            - ./data/postgres:/var/lib/postgresql/data
        environment:
            POSTGRES_PASSWORD: postgres

    mysql:
        image: mariadb:10.3
        container_name: mysql
        restart: always
        volumes:
            - ./data/mysql:/var/lib/mysql
        environment:
            MYSQL_ROOT_PASSWORD: mysql
        command: mysqld --sql_mode=""

    adminer:
        image: adminer
        container_name: adminer
        ports:
            - 8080:8080

    rabbitmq:
        image: rabbitmq:3-management-alpine
        container_name: rabbitmq
        restart: always
        ports:
            - 15672:15672
            - 5672:5672
        environment:
            - RABBITMQ_DEFAULT_USER=rabbitmq
            - RABBITMQ_DEFAULT_PASS=rabbitmq

    redis:
        image: redis:5-alpine
        container_name: redis
        restart: always

    redis-commander:
        image: rediscommander/redis-commander
        container_name: redis-commander
        environment:
            - REDIS_HOSTS=local:redis:6379
        ports:
            - 8081:8081
